#
# Copyright Kroxylicious Authors.
#
# Licensed under the Apache Software License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0
#

networks:
  perf_network:
    driver: bridge

services:
  kafka:
    image: ${KAFKA_IMAGE}
    ports:
      - "9094:9092"
    hostname: broker1
    container_name: broker1
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:9092,BROKER://broker1:9093
      SERVER_HOST: broker1
      KAFKA_BROKER_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker1:9094
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,BROKER:PLAINTEXT
      KAFKA_LISTENERS: BROKER://broker1:9093,PLAINTEXT://:9092,CONTROLLER://broker1:9094
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_SEGMENT_DELETE_DELAY_MS: 1000
      KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: 5
    networks:
      - perf_network
    depends_on:
      - keycloak
  vault:
    image: ${VAULT_IMAGE:-docker.io/hashicorp/vault:1.15}
    hostname: vault
    container_name: vault
    ports:
      - "8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: token
      VAULT_TOKEN:  token
      VAULT_FORMAT: json
      VAULT_DEV_LISTEN_ADDRESS: "[::]:8200"
      VAULT_ADDR: http://localhost:8200 # TODO - shouldn't need this
    networks:
      - perf_network
    healthcheck:
      test:  wget --no-verbose --tries=1 --spider http://localhost:8200/v1/sys/health
      interval: 5s
      retries: 5
      timeout: 10s
  kroxylicious:
    image: ${KROXYLICIOUS_IMAGE}
    hostname: kroxylicious
    container_name: kroxylicious
    # this is to enable async_profiler
    security_opt:
      - seccomp:unconfined
    # Set in perf_test.sh
    user: "${D_UID}:${D_GID}"
    command:
      - "--config"
      - "/opt/kroxylicious/config/config.yaml"
    healthcheck:
      test: grep 2384 /proc/1/net/tcp /proc/1/net/tcp6  # 0x2384 = 9092
      interval: 5s
      retries: 5
      timeout: 10s
    ports:
      - "9092"
    volumes:
      - ./${KROXYLICIOUS_CONFIG:-unused.yaml}:/opt/kroxylicious/config/config.yaml
    networks:
      - perf_network
    depends_on:
      - kafka
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    hostname: keycloak
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_IMPORT: /opt/keycloak/data/import/realm.json
    volumes:
      - type: bind
        source: realm.json
        target: /opt/keycloak/data/import/realm.json
        read_only: true
    ports:
      - "8080"
      - "9000"
    networks:
      - perf_network
    healthcheck:
      test: [ 'CMD-SHELL', '[ -f /tmp/HealthCheck.java ] || echo "public class HealthCheck { public static void main(String[] args) throws java.lang.Throwable { System.exit(java.net.HttpURLConnection.HTTP_OK == ((java.net.HttpURLConnection)new java.net.URL(args[0]).openConnection()).getResponseCode() ? 0 : 1); } }" > /tmp/HealthCheck.java && java /tmp/HealthCheck.java http://localhost:9000/health/live' ]
      start_period: 60s
      interval: 10s
      retries: 3
      timeout: 5s
    command:
      - start-dev
      - --http-port=8080
      - --hostname=keycloak
      - --health-enabled=true
      - --import-realm